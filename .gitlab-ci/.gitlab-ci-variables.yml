################################################################################
# Variables used on this project.
# You can edit the variables here or use the Gitlab CI UI to set global
# variables for your project.
# Default is to use this for a Drupal project, mean a composer.json et the root.
################################################################################

variables:
  ##############################################################################
  #
  # Make CI very verbose in case of problem.
  # CI_DEBUG_TRACE: "1"
  #
  # Verbose scripts, mostly composer and phpunit. 1|0.
  VERBOSE: "0"
  # No ansi flag for composer.
  NO_ANSI: "1"

  # Minor Drupal version to work with, limited to tags on
  # https://cloud.docker.com/u/mogtofu33/repository/docker/mogtofu33/drupal8ci
  # Current stable is 8.7.x, dev is 8.8.x-dev, you can choose "8.7" or "8.8".
  CI_DRUPAL_VERSION: "8.7"

  # [CI_TYPE] Select what you are running CI on, options are:
  #   project
  #     A full Drupal project with a composer.json file at the root.
  #   module
  #     A single Drupal module or theme at the root.
  CI_TYPE: "project"

  # [CI_TYPE] Select the base image for all tests and actions.
  # For a module or theme, base image include Drupal from the official Docker.
  #
  # For a project including a composer.json file.
  CI_IMAGE_VARIANT: "no-drupal"
  # For a module or a theme, use this value to include Drupal code.
  # CI_IMAGE_VARIANT: "drupal"

  # Path is relative to project root, for included Drupal in the
  # image, DOC_ROOT and WEB_ROOT must be the same. For a project based on Drupal
  # project this is 'web'. Can be 'docroot' on some distributions.
  #
  # [CI_TYPE] If using a Drupal project with a composer.json file.
  WEB_ROOT: "/var/www/html/web"
  #
  # If using the image with Drupal for a module or a theme.
  # WEB_ROOT: "/var/www/html"

  # Phpunit tests to run, only custom code or empty for all (included Drupal)
  # see .gitlab-ci/phpunit.xml for settings.
  # 'custom' matches dir **/modules/custom/** and **/themes/custom/**
  PHPUNIT_TESTS: "custom"

  # Comma separated for code quality jobs (phpcs).
  # Will fail if a folder is empty, default to your custom code only.
  # PHP_CODE_QA: "${WEB_ROOT}/modules/custom"
  # PHP_CODE_QA: "${WEB_ROOT}/themes/custom"
  PHP_CODE_QA: "${WEB_ROOT}/modules/custom,${WEB_ROOT}/themes/custom"

  # Comma separated for metrics jobs.
  # Will fail if a folder is empty, default to your custom code only.
  # PHP_CODE_METRICS: "${WEB_ROOT}/modules/custom"
  # PHP_CODE_METRICS: "${WEB_ROOT}/themes/custom"
  PHP_CODE_METRICS: "${WEB_ROOT}/modules/custom,${WEB_ROOT}/themes/custom"

  # Nightwatch.js tests to run, only tag, core, all except core.
  # see https://www.drupal.org/docs/8/testing/javascript-testing-using-nightwatch
  # Add --verbose for a full log from Nightwatch if it fail.
  # NIGHTWATCH_TESTS: "--tag custom"
  NIGHTWATCH_TESTS: "--skiptags core"

  ##############################################################################
  # [TESTING] Skip some stages or single jobs.
  #
  # Skip all tests jobs (next list).
  SKIP_TESTS: 0
  # Skip single jobs in tests. for tests information see
  # https://www.drupal.org/docs/8/testing/types-of-tests-in-drupal-8.
  #
  # Phpunit unit,kernel
  SKIP_TEST_UNITKERNEL: 0
  # Phpunit codecoverage with optional Codecove.io support
  SKIP_TEST_CODECOVERAGE: 0
  # Phpunit functional tests (browser tests)
  SKIP_TEST_FUNCTIONAL: 0
  # Phpunit functional javascript tests (browser with javascript tests)
  SKIP_TEST_FUNCTIONALJS: 0
  # Nightwatch tests (browser with javascript tests), since Drupal 8.6
  # Currently not fully ready for Drupal.
  SKIP_TEST_NIGHTWATCH: 0
  # Symfony security check on composer.lock
  SKIP_TEST_SECURITY: 0
  # Behat tests
  SKIP_TEST_BEHAT: 0
  # Accessibility test
  SKIP_TEST_PA11Y: 0
  # Skip all QA jobs (Code sniffer with Drupal standards)
  SKIP_QA: 0
  # Skip QA Best practices (Code sniffer with Drupal Practices standard)
  SKIP_QA_BESTPRACTICES: 0
  # Skip all lint jobs (Javascript with eslint, Css with stylelint, Sass with sass-lint)
  SKIP_LINT: 0
  # Skip CSS lint job with stylelint
  SKIP_LINT_CSS: 0
  # Skip Javascript lint job with eslint
  SKIP_LINT_JS: 0
  # Skip single lint sass job (Only one not included in Drupal core)
  SKIP_LINT_SASS: 0
  # Skip all metrics jobs (phpmetrics, phploc, pdepend)
  SKIP_METRICS: 0
  # Skip only Phpmetrics job
  SKIP_METRICS_PHPMETRICS: 0
  # Skip only phploc, pdepend job
  SKIP_METRICS_PHPSTATS: 0
  # Skip all deploy jobs by default (samples of deploy)
  SKIP_DEPLOY: 1

  # All reports will be available in artifacts from this folder.
  # Do not need any editing as it's for CI only.
  REPORT_DIR: "reports"

  # Apache root, do not need editing when using ci image.
  DOC_ROOT: "/var/www/html"

  ##############################################################################
  # [TESTING] Next part can be removed for testing only.
  #
  # See Phpqa available tools:
  #   https://github.com/EdgedesignCZ/phpqa#available-tools
  # Allow some errors, this will stop the pipeline if a limit is reached.
  # TOOLS: "phpcs:0,phpmd,phpcpd,parallel-lint"
  TOOLS: "phpcs:0,phpmd"
  # Coding best practices limit, ~10 could be reasonable, to adapt for your
  # project. Current is strict and do not allow errors.
  BEST_PRACTICES: "phpcs:0"

  ##############################################################################
  # Eslint / Phpqa settings.
  #
  # Space separated for eslint and sass lint.
  JS_CODE: "${WEB_ROOT}/**/custom/**/*.js"
  CSS_FILES: "${WEB_ROOT}/**/custom/**/css/*.css"
  SCSS_FILES: "${WEB_ROOT}/**/custom/**/scss/*.scss"

  ##############################################################################
  # [DEPLOY] Global settings for all env used for deploy.
  # Just an example, adapt with 'Deploy jobs definition' at the end of this
  # file.
  ##############################################################################
  #
  # Remote machine access and information.
  # USER_NAME: "ubuntu"
  # DRUPAL_FOLDER: "/var/www/html/MY_DRUPAL_ROOT"
  # Deploy environments configuration, add or remove depending deploy jobs.
  # Testing config, set host or ip
  TESTING_HOST: "localhost"
  # Staging config, set host or ip
  STAGING_HOST: "localhost"
  # Production config, set host or ip
  PRODUCTION_HOST: "localhost"

  # Internal variables for "static" files that do not need editing.
  CI_NIGHTWATCH_ENV: "https://gitlab.com/mog33/gitlab-ci-drupal/snippets/1892526/raw"
